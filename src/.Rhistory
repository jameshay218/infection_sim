y
y <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times, 0)
y
plot(y[,2])
plot(y[,3])
plot(y[,4])
times2 <- y[,1]
dat2 <- y[,c(2,3,4)]
dat2
dat2 <- unname(dat2)
dat2
unname(dat2)
dat2[,1])
dat2[,1]
dat2 <- unname(as.matrix(dat2))
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
popt
popt <- 0.01
param_table
startpars
times2
control_pars
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
actual_ti
plot(as.mcmc(grebbons))
startpars
startpars <- c(15,12,65)
actual_ti
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
dat2
plot(dat2[,1])
plot(dat2[,2])
plot(dat2[,3])
times2
times2 <- times2[seq(0,length(times2),by=5)]
times2
dat2 <- dat2[seq(1,nrow(dat2),by=5),]
dat2
grebbons <- read.csv(greb)
plot(grebbons)
plot(as.mcmc(grebbons))
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
times2
actual_ti
individual_sim
y <- individual_sim(mu_pars,tp_pars, m_pars, actual_ti, 0, -10, seq(0,100,by=1))
y
plot(y)
y <- individual_sim(mu_pars[2,],tp_pars[,2], m_pars[2,], actual_ti, 0, -10, seq(0,100,by=1))
plot(y)
actual_ti
obs_error(5,5,0.79,0.2)
obs_error(5.5,5,0.79,0.2)
obs_error(5.5,5.2,0.79,0.2)
obs_error(6.5,5.2,0.79,0.2)
grebs <- NULL
for(i in 1:14){
grebs[i+1] <- obs_error(i, 5, 0.79, 0.2)
}
plot(grebs)
plot(log(grebs))
proposal_function(70,0,100,0.1)
grebs[i] <- proposal_function(70,0,100,0.1)
grebs <- NULL
for(i in 1:10000){
grebs[i] <- proposal_function(70,0,100,0.1)
}
hist(grebs)
grebs[i] <- proposal_function(70,0,100,0.4)
for(i in 1:10000){
grebs[i] <- proposal_function(70,0,100,0.4)
}
hist(grebs)
ti_pars
ti_pars <- actual_ti
data
dat2
posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
actual_ti
grebs <- NULL
for(i in 1:101){
actual_ti[1] <- i
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
hist(grebs)
plot(grebs)
dat2
dat2a <- dat2[c(1,20),]
times2
times2a <- c(5,100)
actual_ti[1] <- i
for(i in 1:101){
actual_ti[1] <- i
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
dat2
for(i in 1:101){
actual_ti[1] <- i
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2a, times2a)
}
plot(grebs)
for(i in 1:101){
actual_ti[1] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2a, times2a)
}
plot(grebs)
dat2a
times2a
actual_ti
actual_ti[1] <- 0
posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2a, times2a)
posterior(c(45,45,70),mu_pars, tp_pars, m_pars, control_pars, dat2a, times2a)
posterior(c(30,45,70),mu_pars, tp_pars, m_pars, control_pars, dat2a, times2a)
posterior(c(30,45,70),mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
posterior(c(0,45,70),mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
for(i in 1:101){
actual_ti[1] <- i-1
posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
for(i in 1:101){
actual_ti[1] <- i-1
for(i in 1:101){
actual_ti[1] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
lines(grebs)
plot(grebs)
actual_ti
actual_ti <- c(0,45,70)
for(i in 1:101){
actual_ti[2] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
actual_ti[2] <- 45
for(i in 1:101){
actual_ti[1] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
grebs
plot(grebs)
times2
times2 <- seq(0,95,by=5)
dat2
y <- individual_sim(mu_pars[1,],tp_pars[1,],m_pars[1,], actual_ti, 0, -10, times2)
y
times2
times2 <- times2[2:length(times2)]
y <- individual_sim(mu_pars[1,],tp_pars[1,],m_pars[1,], actual_ti, 0, -10, times2)
y
actual_ti
actual_ti[1] <- 0
y <- individual_sim(mu_pars[1,],tp_pars[1,],m_pars[1,], actual_ti, 0, -10, times2)
y
dat2
actual_ti
individual_simulation
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2
times2
y
single_strain(mu_pars[1,],tp_pars[1,],m_pars[1,],actual_ti, times2,0)
dat2
y
single_strain(mu_pars[1,],tp_pars[1,],m_pars[1,],actual_ti, times2,0)
grebs <- NULL
for(i in 1:101){
actual_ti[1] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
actual_ti
mu_pars
dat2
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2
actual_ti
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
mu_pars
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2
times2
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
times2
dat2
actual_ti
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2 <- individual_simulation(actual_ti, mu_pars, tp_pars, m_pars, times2,0)
dat2
dat2 <- dat2[,c(2,3,4)]
dat2
times2
grebs <- NULL
for(i in 1:101){
actual_ti[1] <- i
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
dat2
dat2 <- unname(as.matrix(dat2))
dat2
for(i in 1:101){
actual_ti[1] <- i
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
actual_ti[1] <- 0
for(i in 1:101){
actual_ti[2] <- i
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
dat2
dat2[c(1,19),]
dat2 <- dat2[c(1,19),]
times2 <- c(5,95)
for(i in 1:101){
actual_ti[2] <- i
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
actual_ti
actual_ti[2] <- 45
for(i in 1:101){
actual_ti[1] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
for(i in 1:101){
actual_ti[2] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
actual_ti
actual_ti[1] <- 0
for(i in 1:101){
actual_ti[2] <- i-1
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
}
plot(grebs)
startpars
startpars <- as.integer(runif(3,0,100))
dat2
times2
param_table
param_table[,4] <- c(100,100,100)
control_pars
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
individual_sim
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
actual_ti
actual_ti <- c(75,45,70)
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
actual_ti <- c(0,45,70)
grebs[i] <- posterior(actual_ti,mu_pars, tp_pars, m_pars, control_pars, dat2, times2)
dat2
dat2 <- floor(dat2)
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
popt
param_table
times2
which.max(grebbons[,5])
grebbons[32,]
times2 <- c(10,600)
param_table[,4] <- c(800,800,800)
startpars
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
dat2
plot(as.mcmc(grebbons))
popt
popt <- 0.01
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
popt <- 0.234
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
dat2
to,es2
 times2
dat2[1,] <- c(0,0,0)
dat2[2,] <- c(0,7,0)
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
dat2[,2] <- c(0,3,6)
dat2[2,] <- c(0,3,6)
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
popt
popt <- 0.01
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
popt <- 0.1
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
startpars
startpars <- as.integer(runif(3,0,800))
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
adaptive_period
adaptive_period <- 1000000
adaptive_period
iterations
iterations <- 5000000
burnin <- 1000000
thin
thin <- 100
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
iterations <- 10000000
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
dat2
m_pars
m_pars[1,] <- c(0.0002, 0.0002,0.0002)
m_pars[2,] <- c(0.0002, 0.0002,0.0002)
m_pars[3,] <- c(0.0002, 0.0002,0.0002)
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
which.max(grebbons[,5])
grebbons[675,]
1/1000
m_pars[1,] <- c(0.001,0.001,0.001)
m_pars[2,] <- c(0.001,0.001,0.001)
m_pars[3,] <- c(0.001,0.001,0.001)
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
popt
1/365
dat2 <- individual_simulation(ti_pars, mu_pars, tp_pars, m_pars, seq(0,500,by=5))
plot(dat2[,2])
plot(dat2[,3])
plot(dat2[,4])
plot(dat2[,5])
dat3 <- dat2[c(1,91),]
dat3
times <- dat3[,1]
dat2 <- unname(as.matrix(floor(dat3[,c(2,3,4)])))
dat2
startpars
param_table
startpars <- c(155,451,58)
param_table[,4] <- c(500,500,500)
times
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
dat2 <- individual_simulation(c(45,200,1000), mu_pars, tp_pars, m_pars, seq(0,500,by=5))
dat2 <- dat2[c(1,81),]
dat2
time <- dat2[,1]
time
times <- time
dat2 <- unname(as.matrix(floor(dat2[,c(2,3,4))))
dat2 <- unname(as.matrix(floor(dat2[,c(2,3,4)])))
dat2
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
thin
get_infection_ratios(grebbons,100,burnin,adaptive_period,600)
get_infection_ratios(grebbons,100,burnin,adaptive_period,400)
get_infection_ratios(grebbons,100,burnin,adaptive_period,400)
thin
times
plot(as.mcmc(grebbons))
length(grebbons[grebbons[,4] < 400,4])
nrow(grebbons)
burnin
adaptive_period
2e6/100
nrow(grebbons)
tmp <- grebbons[20000:nrow(grebbons),]
length(tmp[tmp[,4] < 400, 4])
length(tmp[,4])
get_infection_ratios(grebbons,100,burnin,adaptive_period,400)
utils::View(survey_sim)
dat2
dat2[,2] <- c(10,1,9)
dat2[2,] <- c(10,1,9)
times
times <- C(13,525)
times <- c(13,525)
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
param_table
param_table[,4] <- c(912,912,912)
startpars
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
dat2
get_infection_ratios(grebbons,100,burnin,adaptive_period,times[2])
times[2]
param_table
plot(as.mcmc(grebbons))
popt
dat2[2,] <- c(1,7,3)
times <- c(14,526)
grebbons <- read.csv(greb)
plot(as.mcmc(grebbons))
get_infection_ratios(grebbons,100,burnin,adaptive_period,times[2])
tmpname
strains
utils::View(dat)
utils::View(dat)
utils::View(dat)
iterations
iterations <- 1000000
adaptive_period
sourceCpp("~/Documents/infection_sim/src/infection_funcs.cpp")


infer_infections <- function(survey_dat, param_table, iterations, popt, opt_freq, thin, burnin, adaptive_period, mu_pars, tp_pars, m_pars, control_pars, end, n){
    final <- survey_dat
    for(i in 1:n){
        print(paste("Inference on individual number ", i, sep=""))
        tmp <- survey_dat[i,]
        print(tmp)
        dat <- matrix(nrow=2,ncol=4)
        dat[1,] <- unname(as.numeric(tmp[1:4]))
        dat[1,] <- unname(as.numeric(tmp[5:8]))
        start_pars <- as.integer(runif(3, 0, end))
        times <- dat[1,]
        dat2 <- dat[,c(2,3,4)]
        print("Data: ")
        print(dat)
        print("Start parameters: ")
        print(startpars)
        file <- run_MCMC(
            startpars,
            dat2,
            times,
            param_table,
            iterations,
            popt,
            opt_freq,
            thin,
            burnin,
            adaptive_period,
            paste("individual_",i,sep=""),
            500,
            mu_pars,
            tp_pars,
            m_pars,
            control_pars
            )
        chain <- as.mcmc(read.csv(file))
        inference <- get_infection_ratios(chain, thin, burnin, adaptive_period, times[2])
        print(inference)
    }



}



infer_infections <- function(survey_dat, param_table, iterations, popt, opt_freq, thin, burnin, adaptive_period, mu_pars, tp_pars, m_pars, control_pars, end, n){
    final <- survey_dat
    for(i in 1:n){
        print(paste("Inference on individual number ", i, sep=""))
        tmp <- survey_dat[i,]
        print(tmp)
        dat <- matrix(nrow=2,ncol=4)
        dat[1,] <- unname(as.numeric(tmp[1:4]))
        dat[2,] <- unname(as.numeric(tmp[5:8]))
        start_pars <- as.integer(runif(3, 0, end))
        times <- dat[1,]
        dat2 <- dat[,c(2,3,4)]
        print("Data: ")
        print(dat)
        print("Start parameters: ")
        print(startpars)
        file <- run_MCMC(
            startpars,
            dat2,
            times,
            param_table,
            iterations,
            popt,
            opt_freq,
            thin,
            burnin,
            adaptive_period,
            paste("individual_",i,sep=""),
            500,
            mu_pars,
            tp_pars,
            m_pars,
            control_pars
            )
        chain <- as.mcmc(read.csv(file))
        inference <- get_infection_ratios(chain, thin, burnin, adaptive_period, times[2])
        print(inference)
    }



}

getwd()
greb <- read.csv("individual_1.csv")
greb <- read.csv("individual_1_chain.csv")
plot(as.mcmc(greb))
greb <- read.csv("individual_2_chain.csv")
plot(as.mcmc(greb))
param_table

infer_infections <- function(survey_dat, param_table, iterations, popt, opt_freq, thin, burnin, adaptive_period, mu_pars, tp_pars, m_pars, control_pars, end, n){
    final <- survey_dat
    for(i in 1:n){
        print(paste("Inference on individual number ", i, sep=""))
        tmp <- survey_dat[i,]
        dat <- matrix(nrow=2,ncol=4)
        dat[1,] <- unname(as.numeric(tmp[1:4]))
        dat[2,] <- unname(as.numeric(tmp[5:8]))
        start_pars <- as.integer(runif(3, 0, end))
        times <- dat[,1]
        dat2 <- dat[,c(2,3,4)]
        print("Data: ")
        print(dat)
        print("Start parameters: ")
        print(startpars)
        file <- run_MCMC(
            startpars,
            dat2,
            times,
            param_table,
            iterations,
            popt,
            opt_freq,
            thin,
            burnin,
            adaptive_period,
            paste("individual_",i,sep=""),
            500,
            mu_pars,
            tp_pars,
            m_pars,
            control_pars
            )
        chain <- as.mcmc(read.csv(file))
        inference <- get_infection_ratios(chain, thin, burnin, adaptive_period, times[2])
        print(inference)
    }



}

strains

infer_infections <- function(survey_dat, param_table, iterations, popt, opt_freq, thin, burnin, adaptive_period, mu_pars, tp_pars, m_pars, control_pars, end, n){
    final <- survey_dat[1:n,]
    results <- matrix(ncol=3,nrow=n)
    for(i in 1:n){
        print(paste("Inference on individual number ", i, sep=""))
        tmp <- survey_dat[i,]
        dat <- matrix(nrow=2,ncol=4)
        dat[1,] <- unname(as.numeric(tmp[1:4]))
        dat[2,] <- unname(as.numeric(tmp[5:8]))
        start_pars <- as.integer(runif(3, 0, end))
        times <- dat[,1]
        dat2 <- dat[,c(2,3,4)]
        print("Data: ")
        print(dat)
        print("Start parameters: ")
        print(startpars)
        file <- run_MCMC(
            startpars,
            dat2,
            times,
            param_table,
            iterations,
            popt,
            opt_freq,
            thin,
            burnin,
            adaptive_period,
            paste("individual_",i,sep=""),
            500,
            mu_pars,
            tp_pars,
            m_pars,
            control_pars
            )
        chain <- as.mcmc(read.csv(file))
        inference <- get_infection_ratios(chain, thin, burnin, adaptive_period, times[2])
        print("Ratios of infection times:")
        print(inference)
        results[i,] <- inference
    }
    results <- as.data.frame(results)
    colnames(results) <- c("H3N2 Inference", "H5N1 Inference", "H1N1 Inference")
    return(cbind(final,results))
}

iterations
iterations <- 100000
adaptive_period <- 100000
burnin <- 100000
thin <- 10

infer_infections <- function(survey_dat, param_table, iterations, popt, opt_freq, thin, burnin, adaptive_period, mu_pars, tp_pars, m_pars, control_pars, end, n){
    final <- survey_dat[1:n,]
    results <- matrix(ncol=3,nrow=n)
    for(i in 1:n){
        print(paste("Inference on individual number ", i, sep=""))
        tmp <- survey_dat[i,]
        dat <- matrix(nrow=2,ncol=4)
        dat[1,] <- unname(as.numeric(tmp[1:4]))
        dat[2,] <- unname(as.numeric(tmp[5:8]))
        startpars <- as.integer(runif(3, 0, end))
        times <- dat[,1]
        dat2 <- dat[,c(2,3,4)]
        print("Data: ")
        print(dat)
        print("Start parameters: ")
        print(startpars)
        file <- run_MCMC(
            startpars,
            dat2,
            times,
            param_table,
            iterations,
            popt,
            opt_freq,
            thin,
            burnin,
            adaptive_period,
            paste("individual_",i,sep=""),
            500,
            mu_pars,
            tp_pars,
            m_pars,
            control_pars
            )
        chain <- as.mcmc(read.csv(file))
        inference <- get_infection_ratios(chain, thin, burnin, adaptive_period, times[2])
        print("Ratios of infection times:")
        print(inference)
        results[i,] <- inference
    }
    results <- as.data.frame(results)
    colnames(results) <- c("H3N2 Inference", "H5N1 Inference", "H1N1 Inference")
    return(cbind(final,results))
}

results
utils::View(results)
hist(survey_sim[,2])
hist(survey_sim[,3])
hist(survey_sim[,4])
hist(survey_sim[,5])
hist(survey_sim[,6])
hist(survey_sim[,7])
hist(survey_sim[,8])
iterations
end
individuals
S
utils::View(results)
write.csv(results,"results.csv")
infection_risks
control_parameters
control_pars
iterations
burnin
popt
getwd()
greb <- read.csv("/chains/individual_5_chain.csv")
getwd()
setwd("/chains/")
setwd(paste(getwd(),"/chains/",sep=""))
getwd()
greb <- read.csv("individual_1_chain.csv")
plot(as.mcmc(greb))
plot_mcmc("individual_1_chain.csv",100000,100000,100)
thin
plot_mcmc("individual_1_chain.csv",burnin,adaptive_period,thin)
plot_mcmc("individual_2_chain.csv",burnin,adaptive_period,thin)
plot_mcmc("individual_3_chain.csv",burnin,adaptive_period,thin)
plot_mcmc("individual_5_chain.csv",burnin,adaptive_period,thin)
plot_mcmc("individual_6_chain.csv",burnin,adaptive_period,thin)
plot_mcmc("individual_7_chain.csv",burnin,adaptive_period,thin)
plot_mcmc("individual_7_chain.csv",burnin,adaptive_period,thin)
plot_mcmc(1,"individual_7_chain.csv",burnin,adaptive_period,thin)
choice
filename
choice
10000
quit()
n
